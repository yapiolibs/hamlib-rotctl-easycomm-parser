{
  "name": "HamlibRotctlEasycommParser",
  "keywords": "hamlib, rotctl, easycomm, parser, antenna, rotor, rotator, hamradio",
  "description": "Easycomm parser for hamlib rotator control",
  "homepage": "https://github.com/yapiolibs/hamlib-rotctl-easycomm-parser",
  "repository": {
    "type": "git",
    "url": "https://github.com/yapiolibs/hamlib-rotctl-easycomm-parser.git"
  },
  "authors": [{
    "name": "Raoul Rubien",
    "url": "https://github.com/rubienr",
    "maintainer": "true"
  }],
  "license": "Apache-2.0",
  "version": "0.1.2",
  "frameworks": ["native", "arduino"],
  "platforms": ["native", "atmelavr", "ststm32", "espressiv8266", "espressif32"],
  "headers": [
    "easycomm-parser.h",
    "easycomm-command-callback-handler.h",
    "easycomm-buffered-tokenizer.h",
    "easycomm-types.h",
    "easycomm-parser-types.h",
    "easycomm-parser-types-ctors.h",
    "easycomm-parser-types-sprintf.h",
    "easycomm-parser-types-operators.h",
    "easycomm-response-types.h",
    "easycomm-response-types-ctors.h",
    "easycomm-response-types-sprintf.h"
  ],
  "examples": [{
      "name": "parse_a_single_command",
      "base": "test/",
      "files": [
        "platformio.ini",
        "src/example-parse-command.h",
        "src/example-parse-command.cpp"
      ]
    },
    {
      "name": "parse_a_command_with_callback",
      "base": "test/",
      "files": [
        "platformio.ini",
        "src/example-parse-with-callback.h",
        "src/example-parse-with-callback.cpp"
      ]
    },
    {
      "name": "parse_data_from_stream",
      "base": "test/",
      "files": [
        "platformio.ini",
        "src/example-parse-stream.h",
        "src/example-parse-stream.cpp"
      ]
    },
    {
      "name": "parse_from_stream_and_reply-native_integration_test_program",
      "base": "test/",
      "files": [
        "platformio.ini",
        "src/native-integration-test-program.h",
        "src/native-integration-test-program.cpp"
      ]
    }
  ],
  "export": {
    "exclude": [
      ".github/",
      "test/cmake*",
      "test/.idea"
    ]
  }
}
