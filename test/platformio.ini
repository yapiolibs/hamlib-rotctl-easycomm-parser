; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
build_flags =
	-Wall
	; -Werror
build_src_flags =
	-Wall
	-Werror
check_severity = low, medium, high
check_skip_packages = yes
check_tool = cppcheck
check_flags =
	cppcheck: --verbose
	--enable=warning,style,performance,portability
	--suppress=redundantAssignment:*example-parse-*.cpp
	--suppress=redundantInitialization:*example-parse-*.cpp
lib_deps = throwtheswitch/Unity@^2.5.2
test_framework = unity

[env:atmelavr]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_flags =
	${env.build_flags}
	-Wl,-u,vfscanf,-lscanf_flt,-u,vfprintf,-lprintf_flt
upload_speed =
	115200

[env:ststm32]
platform = ststm32
board = blackpill_f401cc
framework = arduino
build_flags =
	${env.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_STANDARD_LIB
	-DPIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
	-DPIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_SCANF
upload_protocol = stlink
test_speed = 115200

[env:espressif8266]
platform = espressif8266
board = d1_mini
framework = arduino
build_flags = -Wall
upload_speed =
	460800

[env:espressif32]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
build_flags = -Wall
upload_speed =
	921600

[env:native]
platform = native
build_src_flags =
	${env.build_src_flags}
	-DENV_NATIVE
extra_scripts = post:integration/integration_test_hook.py

[env:example-parse-command]
extends = env:atmelavr
build_src_flags =
	${env:atmelavr.build_src_flags}
	-DPIO_EXAMPLE_PARSE_COMMAND

[env:example-parse-with-callback]
extends = env:atmelavr
build_src_flags =
	${env:atmelavr.build_src_flags}
	-DPIO_EXAMPLE_PARSE_WITH_CALLBACK

[env:example-parse-stream]
extends = env:atmelavr
build_src_flags =
	${env:atmelavr.build_src_flags}
	-DPIO_EXAMPLE_PARSE_STREAM
